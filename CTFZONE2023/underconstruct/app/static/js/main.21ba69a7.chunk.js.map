{"version":3,"sources":["components/logo.png","components/Nav.js","components/Counter.js","components/Footer.js","components/WrapperPlaylist.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavWrapper","styled","nav","_templateObject","NavUL","ul","_templateObject2","NavLI","li","_templateObject3","activeStyle","color","textShadow","Nav","react_default","a","createElement","react_router_dom","to","exact","style","textDecoration","CounterWrapper","h1","Counter_templateObject","NeonBlue","Counter_templateObject2","Header","display","justifyContent","alignItems","src","logo","alt","Counter","dateInFuture","moment","Fragment","dist_default","toDate","sourceFormatMask","targetFormatMask","FooterWrapper","footer","Footer_templateObject","Footer","href","Heart_esm","size","MainDiv","div","WrapperPlaylist_templateObject","Div","WrapperPlaylist_templateObject2","WrapperPlaylist_templateObject3","_templateObject4","FormSt","input","_templateObject5","ButtonCs","button","_templateObject6","WrapperPlaylist_NeonBlue","WrapperPlaylist","_useState","useState","site_url","_useState2","Object","slicedToArray","inputField","setInputField","WrapperPlaylist_CounterWrapper","WrapperPlaylist_Header","esm","width","height","className","type","name","onChange","e","defineProperty","target","value","placeholder","onClick","fetch","concat","encodeURIComponent","method","Container","section","App_templateObject","FourOFour","App_templateObject2","App","react_router","path","component","render","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21ba69a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ed68e212.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\nconst NavWrapper = styled.nav`\n    display: flex;\n    justify-content: space-evenly;\n    font-family: Electrolize, sans-serif;\n    color: rgb(194, 194, 194);\n    /* border: solid 1px blue; */\n    text-transform: uppercase;\n`\nconst NavUL = styled.ul`\n    /* .row */\n    display: flex;\n    flex-direction: row;\n    padding: 0;\n`\nconst NavLI = styled.li`\n    /* .nav-link */\n    font-size: 1rem;\n    font-weight: bold;\n    list-style: none;\n    /* .nav li */\n    margin: 0 1rem;\n    text-decoration: none;\n`\n\nconst activeStyle = {\n    color: '#fae127',\n    textShadow: '0 0 20px #fae127'\n}\n\nexport default function Nav() {\n    return (\n        <NavWrapper>\n            <NavUL>\n                <NavLI>\n                    <NavLink\n                        to='/'\n                        exact\n                        activeStyle={activeStyle}\n                        style={{ textDecoration: 'none', color: 'inherit' }}\n                    >\n                        countdown\n                    </NavLink>\n                </NavLI>\n                <NavLI>\n                    <NavLink\n                        to='/chrome'\n                        exact\n                        activeStyle={activeStyle}\n                        style={{ textDecoration: 'none', color: 'inherit' }}\n                    >\n                        Browser\n                    </NavLink>\n                </NavLI>\n                <NavLI>\n                    Upcoming\n                </NavLI>\n            </NavUL>\n        </NavWrapper>\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport ReactMomentCountDown from 'react-moment-countdown';\nimport moment from 'moment'\nimport logo from './logo.png'\n\n\nconst CounterWrapper = styled.h1`\n    display: flex;\n    justify-content: center;\n    color: #fae127;\n    text-shadow: 0 0 20px #fae127;\n    text-align: center;\n    font-family: \"Electrolize\",\"sans-serif\";\n    font-size: 3.2rem;\n    margin: 19rem auto;\n    margin-top: inherit;\n`\n\nconst NeonBlue = styled.h1`\n  color: #1BCFEE;\n  /* h1-h6 && th CSS */\n  font-family: \"Electrolize\", \"sans-serif\";\n  /* h1 */\n  font-size: 1rem;\n  /* h1-h6 && th CSS */\n  font-weight: bold;\n  /* h1 */\n  text-align: center;\n  /* Neon Yellow */\n  text-shadow: 0 0 10px #1BCFEE;\n  /* h1-h6 && th CSS */\n  text-transform: uppercase;\n  margin-top: 16rem;\n  margin-bottom: 1rem;\n`\n\nexport function Header() {\n    return (\n        <NeonBlue>\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n                <img src={logo} alt=\"Logo\" />\n            </div>\n            CTFZone Finals countdown:\n        </NeonBlue>\n    )\n}\n\n\nexport default function Counter() {\n    const dateInFuture = moment('2023-10-10 23:59:59');\n    return (\n        <React.Fragment>\n            \n            <Header />\n            <CounterWrapper>\n                <ReactMomentCountDown toDate={dateInFuture} sourceFormatMask='YYYY-MM-DD HH:mm:ss' targetFormatMask='DDDD:HH:mm:ss' />\n                \n            </CounterWrapper>\n            \n        </React.Fragment>\n\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Heart } from 'styled-icons/boxicons-regular/Heart'\n\nconst FooterWrapper = styled.footer`\n    color: rgb(194, 194, 194);\n    text-align: center;\n    font-size: .8rem;\n`\n\nexport default function Footer() {\n    return (\n        <FooterWrapper>\n            Made with <a href='https://ctf.bi.zone/'><Heart style={{ color: 'red' }} size={16} /></a> for CTFZone by @Danr0\n        </FooterWrapper>\n    )\n}","import React from 'react'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport { CyberEl16 } from 'react-cyber-elements'\n\n\nconst MainDiv = styled.div`\n  width: 250px;\n  padding: 20px;\n  color: white;\n`\n\nconst Div = styled.div`\n  width: 250px;\n  padding: 20px;\n  color: white;\n  text-align: center;\n  justifyContent: center;\n  display: flex;\n`\n\nconst CounterWrapper = styled.h1`\n    display: flex;\n    justify-content: center;\n    font-family: \"Electrolize\",\"sans-serif\";\n    font-size: 3.2rem;\n    margin: 19rem auto;\n    margin-top: inherit;\n`\n\nconst NeonBlue = styled.h1`\n  color: #1BCFEE;\n  font-family: \"Electrolize\", \"sans-serif\";\n  font-size: 1rem;\n  font-weight: bold;\n  text-align: center;\n  text-shadow: 0 0 10px #1BCFEE;\n  text-transform: uppercase;\n  margin-top: 13rem;\n  margin-bottom: 1rem;\n`\n\nconst FormSt = styled.input`\n  color: #1BCFEE;\n  font-family: \"Electrolize\", \"sans-serif\";\n  text-shadow: 0 0 10px #1BCFEE;\n  background-color: #00004d;\n`\n\n\nconst ButtonCs = styled.button`\n  color: #1BCFEE;\n  font-family: \"Electrolize\", \"sans-serif\";\n  text-shadow: 0 0 10px #1BCFEE;\n  text-transform: uppercase;\n  background-color: #00004d;\n  margin-left: 5%;\n`\n\nexport function Header() {\n    return (\n        <NeonBlue>\n            Site url:\n        </NeonBlue>\n    )\n}\n\nexport default function WrapperPlaylist () {\n    const [inputField , setInputField] = useState({\n        site_url: ''\n    })\n\n    const inputsHandler = (e) =>{\n        setInputField( {[e.target.name]: e.target.value} )\n    }\n\n    const submitButton = () =>{\n        fetch(`/browser?url=${encodeURIComponent(inputField.site_url)}`, {\n            method: \"GET\",\n        })\n    }\n\n    return (\n        <CounterWrapper>\n            <Header />\n            <MainDiv>\n                <MainDiv>\n                    <CyberEl16 \n                        style={{\n                            width: '100px',\n                            height: '100px'\n                        }}\n                        className=\"cyber-icon\" />\n                \n                </MainDiv>\n                \n                <Div>\n                <FormSt \n                    type=\"text\"\n                    name=\"site_url\" \n                    onChange={inputsHandler} \n                    placeholder=\"Url\" \n                    value={inputField.site_url}\n                    style={{\n                        width: '500px',\n                        height: '30px'\n                    }}\n                    />\n\n                    \n                    <ButtonCs onClick={submitButton} style={{\n                        width: '80px',\n                        height: '35px',\n                    }}>Submit url</ButtonCs>\n\n\n                </Div>\n            </MainDiv>\n        </CounterWrapper>\n    )\n}","import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport Nav from './components/Nav';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Counter from './components/Counter'\nimport Footer from './components/Footer'\nimport WrapperPlaylist from './components/WrapperPlaylist'\n\nconst Container = styled.section`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 50px;\n  border: solid 1px white;\n`\nconst FourOFour = styled.h1`\n  color: rgb(194, 194, 194);\n  text-align: center;\n  font-size: 5rem;\n  text-transform: uppercase;\n`\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n        <Nav />\n        <Switch>\n          <Route exact path='/' component={Counter} />\n          <Route exact path='/chrome' component={WrapperPlaylist} />\n          <Route render={() => <FourOFour>404: not found</FourOFour>} />\n        </Switch>\n        <Footer />\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}